#!/bin/csh -f

#==============================================================================
#  The following assumes that this script is being executed from a version
#  of CESM with a moby-based version of models/ocn/pop2
# (svn checkout $SVN/pop2/branches/moby models/ocn/pop2)
#==============================================================================

mkdir -p $CASEROOT/SourceMods/src.pop2/src.moby
if !(-d $CASEBUILD  ) mkdir $CASEBUILD

###==============================================================###
###   Construct moby.buildnml.csh                                ###
###==============================================================###

cat >! $CASEBUILD/moby.buildnml.csh << EOF2
#!/bin/csh -f

foreach file (data data.ptracers data.gchem data.\$OCN_TRACER_MODULES_OPT data.misc data.pkg )
  if (-e \$CASEROOT/SourceMods/src.pop2/src.moby/\${OCN_GRID}_\$file) then
    set datapath = \$CASEROOT/SourceMods/src.pop2/src.moby
  else if (-e \$CODEROOT/ocn/pop2/aux/moby/\$OCN_TRACER_MODULES_OPT/input/\${OCN_GRID}_\$file) then
    set datapath = \$CODEROOT/ocn/pop2/aux/moby/\$OCN_TRACER_MODULES_OPT/input
  else
    exit -3
  endif
  cat \$datapath/\${OCN_GRID}_\$file | grep -v \#  >> \$RUNDIR/moby_in_temp
end

cat >! \$RUNDIR/moby.commands.sed << EOF
s#POPVERTGRID#using_POP_grid_through_interface_layer#
s#INPUTDATA#\$DIN_LOC_ROOT/ocn/moby#
s#OCN_GRID#\$OCN_GRID#
EOF

sed -f \$RUNDIR/moby.commands.sed \$RUNDIR/moby_in_temp >! \$RUNDIR/moby_in || exit 3
rm  -f \$RUNDIR/moby.commands.sed \$RUNDIR/moby_in_temp

cd \$RUNDIR

EOF2
chmod u+x $CASEBUILD/moby.buildnml.csh

###==============================================================###
###  Construct moby.buildexe.csh for darwin/quota/etc            ###
###==============================================================###

cat >! $CASEBUILD/moby.buildexe.csh << EOF1
#!/bin/csh -f

if !(-d \$OBJROOT/ocn/moby/source ) mkdir -p \$OBJROOT/ocn/moby/source
if !(-d \$OBJROOT/ocn/moby/obj    ) mkdir -p \$OBJROOT/ocn/moby/obj
cd \$OBJROOT/ocn/moby/source

echo -----------------------------------------------------------------
echo  Copy selected MITgcm ptracers, chem and base-model files,
echo  all darwin/quota/etc base-model, CESM interface files and 
echo  any nonstandard files 
echo -----------------------------------------------------------------

set copy_list = (ptracers_readparms ptracers_diagnostics_init \
                 ptracers_init_fixed ptracers_set_iolabel \
                 gchem_diagnostics_init gchem_init_fixed \
                 gchem_init_vari gchem_readparms \
                 different_multiple load_grid_spacing barrier \
                 eeboot eeboot_minimal fool_the_compiler \
                 ini_grid ini_masks_etc ini_vertical_grid ini_parms \
                 open_copy_data_file packages_boot port_rand print \
                 set_defaults timeave_reset utils write_utils lef_zero )

cp -fp \$CODEROOT/ocn/pop2/aux/moby/MITgcm/*.h .
foreach file (\$copy_list)
  cp -fp \$CODEROOT/ocn/pop2/aux/moby/MITgcm/\${file}.F .
end
cp -fp \$CODEROOT/ocn/pop2/aux/moby/\$OCN_TRACER_MODULES_OPT/source/*.[FHh] .
cp -fp \$CODEROOT/ocn/pop2/aux/moby/\$OCN_TRACER_MODULES_OPT/interf/*.[FHh]  .
set my_path = \$CASEROOT/SourceMods/src.pop2/src.moby
if (-d \$my_path ) cp -fp \$my_path/*.[FHh]  .

echo -----------------------------------------------------------------
echo Compile moby library
echo NOTE: ALLOW_DARWIN and ALLOW_GCHEM are set in PACKAGES_CONFIG.h.
echo       GCHEM  options are set in  GCHEM_OPTIONS.h
echo       DARWIN options are set in  DARWIN_OPTIONS.h
echo -----------------------------------------------------------------

cd \$OBJROOT/ocn/moby/obj
cat >! Filepath <<EOF
 \$OBJROOT/ocn/moby/source
EOF

# Enforce the no-threading constraint
if ( \$POP_MXBLCKS != 1 ) then
  echo "fatal moby error: POP_MXBLCKS must equal one"
  echo "moby info message:  POP_MXBLCKS = \$POP_MXBLCKS"
  exit -32
endif
if      ( \${OCN_GRID} =~ gx3* ) then
   setenv POP_KM 60
else if ( \${OCN_GRID} =~ gx1* ) then
   setenv POP_KM 60
else 
  echo OCN_GRID = \$OCN_GRID
  echo "moby error: valid only for gx1 and gx3 grids"
  exit -33
endif

set mobydefs = "-DCESMMOBY -DPOP_NPROCX=\$POP_NX_BLOCKS -DPOP_NPROCY=\$POP_NY_BLOCKS \
                -DPOP_MXBLCKS=\$POP_MXBLCKS -DPOP_BLCKX=\$POP_BLCKX -DPOP_BLCKY=\$POP_BLCKY \
                -DPOP_KM=\$POP_KM"

gmake complib -j \$GMAKE_J MODEL=moby COMPLIB=\$LIBROOT/libmoby.a USER_CPPDEFS="\$mobydefs" \
              -f \$CASETOOLS/Makefile || exit 2

set f_dir = \$OBJROOT/ocn/moby/source/f_files
if !(-d  \$f_dir ) mkdir -p \$f_dir
mv -f *.f \$f_dir

if !(-f \$LIBROOT/libmoby.a) then
  echo "ERROR: moby library not available"
  exit -1
endif

EOF1
chmod u+x $CASEBUILD/moby.buildexe.csh

